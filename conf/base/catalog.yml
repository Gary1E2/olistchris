# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html


customers: 
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_customers_dataset.csv

orders: 
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_orders_dataset.csv

order_items:
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_order_items_dataset.csv

payments:
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_order_payments_dataset.csv

reviews:
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_order_reviews_dataset.csv

products:
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_products_dataset.csv

sellers:
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_sellers_dataset.csv

geolocation:
  type: pandas.CSVDataset
  filepath: data/01_raw/olist_geolocation_dataset.csv

product_translation:
  type: pandas.CSVDataset
  filepath: data/01_raw/product_category_name_translation.csv

preprocessed_orders:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/preprocessed_orders.parquet

model_input_table:
  type: pandas.ParquetDataset
  filepath: data/03_primary/model_input_table.parquet

repeat_buyer_classifier:
  type: pickle.PickleDataset
  filepath: data/06_models/repeat_buyer_classifier.pickle
  versioned: true

freight_value_regressor:
  type: pickle.PickleDataset
  filepath: data/06_models/freight_value_regressor.pickle
  versioned: true

delivery_time_regressor:
  type: pickle.PickleDataset
  filepath: data/06_models/delivery_time_regressor.pickle
  versioned: true

repeat_buyer_cm:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/repeat_buyer_cm.png
  versioned: true

repeat_buyer_rocauc:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/repeat_buyer_rocauc.png
  versioned: true

freight_value_conteval:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/freight_value_conteval.png
  versioned: true

delivery_time_conteval:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/delivery_time_conteval.png
  versioned: true
